{{- define "imports"}}import (
{{if .}}	"encoding/json"
{{end}}	"text/template"
{{if .}}{{range .}}
	"{{.}}"{{end}}
){{else}}){{end}}{{end -}}

{{- define "wrapperSignatureParams"}}{{if .LastParam}}{{range .OtherParams}}{{.Name}} {{.Type}}, {{end}}{{.LastParam.Name}} {{.LastParam.Type}}{{end}}{{end -}}

{{- define "directiveCallParams"}}{{if .LastParam}}{{range .OtherParams}}{{.Name}}, {{end}}{{.LastParam.Name}}{{if .LastParam.Variadic}}...{{end}}{{end}}{{end -}}

{{- define "directiveWithError"}}payload, err := {{.Pkg}}.{{.Func}}({{template "directiveCallParams" .}})
		if err != nil {
			return "", err
		}
		b, err := json.Marshal(payload){{end -}}

{{- define "directiveNoError"}}b, err := json.Marshal({{.Pkg}}.{{.Func}}({{template "directiveCallParams" .}})){{end -}}

{{- define "directiveLogic"}}{{if eq (len .Returns) 2}}{{template "directiveWithError" .}}{{else}}{{template "directiveNoError" .}}{{end}}{{end -}}

// Code generated by `{{.Prompt}}`; DO NOT EDIT.

package main

{{template "imports" .Imports}}

var FreeformDirectives = template.FuncMap{
	{{- range .Directives}}
	"{{.Name}}": func({{template "wrapperSignatureParams" .}}) (string, error) {
		{{template "directiveLogic" .}}
		if err != nil {
			return "", err
		}
		return string(b), nil
	},{{end}}
}
