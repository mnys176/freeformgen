// Code generated by `/var/folders/3q/___nwkls54l4524jwzn6kfnh0000gn/T/go-build20463741/b001/exe/freeformgen directives -d native`; DO NOT EDIT.

package main

import (
	"encoding/json"
	"text/template"

	"github.com/mnys176/freeformgen/native"
)

var FreeformDirectives = template.FuncMap{
	"array": func(length int) (string, error) {
		b, err := json.Marshal(native.ArrayDirective(length))
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
	"boolean": func() (string, error) {
		b, err := json.Marshal(native.BooleanDirective())
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
	"float": func(min, max float64) (string, error) {
		b, err := json.Marshal(native.FloatDirective(min, max))
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
	"integer": func(min, max int64) (string, error) {
		b, err := json.Marshal(native.IntegerDirective(min, max))
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
	"object": func(length int) (string, error) {
		b, err := json.Marshal(native.ObjectDirective(length))
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
	"string": func(length int) (string, error) {
		b, err := json.Marshal(native.StringDirective(length))
		if err != nil {
			return "", err
		}
		return string(b), nil
	},
}
